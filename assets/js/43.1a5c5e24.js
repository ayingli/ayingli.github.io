(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{354:function(a,t,r){"use strict";r.r(t);var s=r(6),e=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"如何用python的pandas库函数重塑表格数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何用python的pandas库函数重塑表格数据"}},[a._v("#")]),a._v(" 如何用Python的pandas库函数重塑表格数据")]),a._v(" "),t("h2",{attrs:{id:"题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[a._v("#")]),a._v(" 题目")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("DataFrame report\n+-------------+--------+\n| Column Name | Type   |\n+-------------+--------+\n| product     | object |\n| quarter_1   | int    |\n| quarter_2   | int    |\n| quarter_3   | int    |\n| quarter_4   | int    |\n+-------------+--------+\n")])])]),t("p",[a._v("编写一个解决方案，将数据 "),t("strong",[a._v("重塑")]),a._v(" 成每一行表示特定季度产品销售数据的形式。")]),a._v(" "),t("p",[a._v("结果格式如下例所示：")]),a._v(" "),t("p",[t("strong",[a._v("示例 1：")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("输入：\n+-------------+-----------+-----------+-----------+-----------+\n| product     | quarter_1 | quarter_2 | quarter_3 | quarter_4 |\n+-------------+-----------+-----------+-----------+-----------+\n| Umbrella    | 417       | 224       | 379       | 611       |\n| SleepingBag | 800       | 936       | 93        | 875       |\n+-------------+-----------+-----------+-----------+-----------+\n输出：\n+-------------+-----------+-------+\n| product     | quarter   | sales |\n+-------------+-----------+-------+\n| Umbrella    | quarter_1 | 417   |\n| SleepingBag | quarter_1 | 800   |\n| Umbrella    | quarter_2 | 224   |\n| SleepingBag | quarter_2 | 936   |\n| Umbrella    | quarter_3 | 379   |\n| SleepingBag | quarter_3 | 93    |\n| Umbrella    | quarter_4 | 611   |\n| SleepingBag | quarter_4 | 875   |\n+-------------+-----------+-------+\n解释：\nDataFrame 已从宽格式重塑为长格式。每一行表示一个季度内产品的销售情况。\n")])])]),t("h2",{attrs:{id:"解题方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解题方案"}},[a._v("#")]),a._v(" 解题方案")]),a._v(" "),t("h3",{attrs:{id:"_1、审题-理解题意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、审题-理解题意"}},[a._v("#")]),a._v(" 1、审题，理解题意")]),a._v(" "),t("p",[a._v("题目的意思是重塑一个给定的 DataFrame，该 DataFrame 捕获不同季度的产品销售数据。最初，数据是以宽格式组织的，其中每个产品都有单独的列表示每个季度的销售额。任务是将此数据转换为长格式，其中每一行表示特定产品在特定季度的销售数据，从而有效地将多个季度列合并为两列：一列指示该季度，另一列详细说明该季度的销售额。此时可以用 pandas 的 melt 函数用于转换或重塑数据。它将 DataFrame 从宽格式(列表示多个变量)更改为长格式(每行表示一个唯一变量)。")]),a._v(" "),t("h5",{attrs:{id:"melt-函数参数定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#melt-函数参数定义"}},[a._v("#")]),a._v(" melt 函数参数定义：")]),a._v(" "),t("ul",[t("li",[a._v("id_vars：这指定了应该保持不变的列。对于这个问题，只有 product 列保持不变，因为我们希望输出中的每一行都与一个产品相关联。")]),a._v(" "),t("li",[a._v("value_vars：这指定了我们想要“melt”或将其整形成行的列。在我们的示例中，以下是每个季度的销售数据列：quarter_1、quarter_2、quarter_3 和 quarter_4。")]),a._v(" "),t("li",[a._v("var_name：这是将存储来自 value_vars 的标头名称的新列的名称。在我们的问题中，这些是季度名称。")]),a._v(" "),t("li",[a._v("value_name：这是将存储 value_vars 中的值的新列的名称。在我们的问题中，这将是每个季度每种产品的销售数据。")])]),a._v(" "),t("h3",{attrs:{id:"_2、解题思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、解题思路"}},[a._v("#")]),a._v(" 2、解题思路")]),a._v(" "),t("p",[a._v("针对该题目，我们可以使用如下方法实现：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("id_vars=['product'] 保持 product 列不变。")])]),a._v(" "),t("li",[t("p",[a._v("value_vars=['quarter_1', 'quarter_2', 'quarter_3', 'quarter_4'] 意味着我们将从这些列中提取数据，并将其重塑为两个新列。")])]),a._v(" "),t("li",[t("p",[a._v("var_name='quarter' 将创建一个名为 quarter 的新列，此列中的每个条目都将是从中获取销售数据的列名 (比如 quarter_1，quarter_2 和其它)。")])]),a._v(" "),t("li",[t("p",[a._v("value_name='sales' 将创建一个叫做 sales 的新列，它将存储实际的销售价值。\n通过应用 melt 函数，DataFrame 被重塑为所需的长格式，最终实现的效果如下图所示：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yishukan/yishukan/raw/master/img/1696838796-gkkNpq-image.png",alt:"image.png"}})])])]),a._v(" "),t("h3",{attrs:{id:"_3、代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、代码实现"}},[a._v("#")]),a._v(" 3、代码实现")]),a._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" pandas "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" pd\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("meltTable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("report"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" pd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DataFrame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" pd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DataFrame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    report "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" report"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("melt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n        id_vars"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"product"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        value_vars"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quarter_1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quarter_2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quarter_3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quarter_4"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        var_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quarter"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        value_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"sales"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" report\n")])])]),t("h3",{attrs:{id:"_4、执行结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、执行结果"}},[a._v("#")]),a._v(" 4、执行结果")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yishukan/yishukan/raw/master/img/image-20231025115101596.png",alt:"image-20231025115101596"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);