(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{348:function(a,t,s){"use strict";s.r(t);var n=s(6),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"如何用python的pandas库删除表的列中有缺失值的行数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何用python的pandas库删除表的列中有缺失值的行数据"}},[a._v("#")]),a._v(" 如何用Python的pandas库删除表的列中有缺失值的行数据")]),a._v(" "),t("h2",{attrs:{id:"题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[a._v("#")]),a._v(" 题目")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("DataFrame students\n+-------------+--------+\n| Column Name | Type   |\n+-------------+--------+\n| student_id  | int    |\n| name        | object |\n| age         | int    |\n+-------------+--------+\n")])])]),t("p",[a._v("在 "),t("code",[a._v("name")]),a._v(" 列里有一些具有缺失值的行。")]),a._v(" "),t("p",[a._v("编写一个解决方案，删除具有缺失值的行。")]),a._v(" "),t("p",[a._v("返回结果格式如下示例所示。")]),a._v(" "),t("p",[t("strong",[a._v("示例 1:")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("输入：\n+------------+---------+-----+\n| student_id | name    | age |\n+------------+---------+-----+\n| 32         | Piper   | 5   |\n| 217        | None    | 19  |\n| 779        | Georgia | 20  |\n| 849        | Willow  | 14  |\n+------------+---------+-----+\n输出：\n+------------+---------+-----+\n| student_id | name    | age |\n+------------+---------+-----+\n| 32         | Piper   | 5   |\n| 779        | Georgia | 20  | \n| 849        | Willow  | 14  | \n+------------+---------+-----+\n解释：\n学号为 217 的学生所在行在 name 列中有空值，因此这一行将被删除。\n")])])]),t("h2",{attrs:{id:"解题方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解题方案"}},[a._v("#")]),a._v(" 解题方案")]),a._v(" "),t("h3",{attrs:{id:"_1、审题-理解题意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、审题-理解题意"}},[a._v("#")]),a._v(" 1、审题，理解题意")]),a._v(" "),t("p",[a._v("题目的意思是学生信息的 pandas DataFrame 中name 列中有一些行缺少值(None 或 NaN)，有丢失的数据。想要把缺失数据的行数据删除掉。")]),a._v(" "),t("p",[a._v("要解决这个问题，可以使用 pandas 的 dropna 函数从 DataFrame 中删除那些缺少名称的行。")]),a._v(" "),t("p",[a._v("dropna 函数定义：")]),a._v(" "),t("p",[a._v("dropna 函数： dropna 函数属于 pandas DataFrame 并且被用来移除缺失的值。在 pandas 中，缺失的数据通常由 NaN(非数字的缩写)值表示，题目中显示为 None，也被 pandas 认为是缺失值。")]),a._v(" "),t("p",[a._v("dropna 函数参数定义：")]),a._v(" "),t("p",[a._v("axis： 它可以是 {0 or 'index', 1 or 'columns'}。默认为 0。如果 axis=0，则丢弃包含缺失值的行；如果 axis=1，则丢弃包含缺失值的列。\nhow： 确定当我们至少有一个 NA 或全部 NA 时，是否从 DataFrame 中删除行或列。\nhow='any'： 如果存在任何 NA 值，则删除该行或列(默认)。\nhow='all'： 如果所有值都为 NA，则删除该行或列。\nthresh： 需要多少非 NA 值。这是一个整型参数，需要最小数量的非 NA 值才能保留行/列。\nsubset： 要考虑的另一个轴上的标签，例如，如果您正在删除行，则这些标签将是要包括的列的列表。当您只想考虑某些列中的 NA 值时，这特别有用。\ninplace： 这是一个布尔值，如果是 True，则对 DataFrame 本身进行更改。请记住，在使用 inplace=True 参数时，您修改的是原始的 DataFrame。如果出于任何原因需要保留原始数据，请避免使用 inplace=True，而是将结果赋给新的 DataFrame。")]),a._v(" "),t("h3",{attrs:{id:"_2、解题思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、解题思路"}},[a._v("#")]),a._v(" 2、解题思路")]),a._v(" "),t("p",[a._v("对于题目我们只考虑 name 列，所以我们设置了 subset=['name']。students.dropna(subset=['name'], inplace=True) ,该参数告诉 dropna 在查找缺失值时只考虑 name 列。也就是说只有 name 列缺少值的行才会被删除。我们需要修改原始的 DataFrame，所以设置 inplace=True。通过将 inplace 设置为 True，我们直接修改了原来的 students DataFrame。如果设置为 False(或省略)，则会返回包含删除行的新 DataFrame，而原来的 students DataFrame 将保持不变。")]),a._v(" "),t("h3",{attrs:{id:"_3、代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、代码实现"}},[a._v("#")]),a._v(" 3、代码实现")]),a._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" pandas "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" pd\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("dropMissingData")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" pd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DataFrame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" pd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DataFrame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("dropna"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("subset"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" inplace"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" students\n")])])]),t("h3",{attrs:{id:"_4、执行结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、执行结果"}},[a._v("#")]),a._v(" 4、执行结果")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yishukan/yishukan/raw/master/img/image-20231025084602289.png",alt:"image-20231025084602289"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);