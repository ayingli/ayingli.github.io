(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{352:function(a,t,s){"use strict";s.r(t);var e=s(6),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"如何用python的pandas库获取-表格的行数和列数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何用python的pandas库获取-表格的行数和列数"}},[a._v("#")]),a._v(" 如何用Python的pandas库获取 表格的行数和列数")]),a._v(" "),t("h2",{attrs:{id:"题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[a._v("#")]),a._v(" 题目")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("DataFrame players:\n+-------------+--------+\n| Column Name | Type   |\n+-------------+--------+\n| player_id   | int    |\n| name        | object |\n| age         | int    |\n| position    | object |\n| ...         | ...    |\n+-------------+--------+\n")])])]),t("p",[a._v("编写一个解决方案，计算并显示 "),t("code",[a._v("players")]),a._v(" 的 "),t("strong",[a._v("行数和列数")]),a._v("。")]),a._v(" "),t("p",[a._v("将结果返回为一个数组：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[number of rows, number of columns]\n")])])]),t("p",[a._v("返回结果格式如下示例所示。")]),a._v(" "),t("p",[t("strong",[a._v("示例 1：")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("输入：\n+-----------+----------+-----+-------------+--------------------+\n| player_id | name     | age | position    | team               |\n+-----------+----------+-----+-------------+--------------------+\n| 846       | Mason    | 21  | Forward     | RealMadrid         |\n| 749       | Riley    | 30  | Winger      | Barcelona          |\n| 155       | Bob      | 28  | Striker     | ManchesterUnited   |\n| 583       | Isabella | 32  | Goalkeeper  | Liverpool          |\n| 388       | Zachary  | 24  | Midfielder  | BayernMunich       |\n| 883       | Ava      | 23  | Defender    | Chelsea            |\n| 355       | Violet   | 18  | Striker     | Juventus           |\n| 247       | Thomas   | 27  | Striker     | ParisSaint-Germain |\n| 761       | Jack     | 33  | Midfielder  | ManchesterCity     |\n| 642       | Charlie  | 36  | Center-back | Arsenal            |\n+-----------+----------+-----+-------------+--------------------+\n输出：\n[10, 5]\n解释：\n这个 DataFrame 包含 10 行和 5 列。\n")])])]),t("h2",{attrs:{id:"解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[a._v("#")]),a._v(" 解决方案")]),a._v(" "),t("h3",{attrs:{id:"_1、审题-理解题意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、审题-理解题意"}},[a._v("#")]),a._v(" 1、审题，理解题意")]),a._v(" "),t("p",[a._v("题目给定一个DataFrame表，要求返回 DataFrame表有多少行，多少列数据。要解这个题，先要理解 Pandas 库中的shape 属性，是以元组(行、列)的形式返回 DataFrame 或 Series 的维度。调用该属性时，返回一个元组 "),t("code",[a._v("(number of rows, number of columns)")])]),a._v(" "),t("h3",{attrs:{id:"_2、解题思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、解题思路"}},[a._v("#")]),a._v(" 2、解题思路")]),a._v(" "),t("h4",{attrs:{id:"导入需要的库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导入需要的库"}},[a._v("#")]),a._v(" 导入需要的库：")]),a._v(" "),t("p",[a._v("import pandas as pd       #我们首先需要导入 pandas 库，这是一个在 Python 语言中用于数据操作和分析的强大工具。")]),a._v(" "),t("h4",{attrs:{id:"定义函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义函数"}},[a._v("#")]),a._v(" 定义函数：")]),a._v(" "),t("p",[a._v("def getDataframeSize(players: pd.DataFrame) -> List:       #该行定义了一个名为 getDataframeSize 的新函数，将 DataFrame players 作为输入参数，并返回一个包含 DataFrame players 中的行数和列数的列表。")]),a._v(" "),t("h4",{attrs:{id:"使用-shape-属性-返回元组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-shape-属性-返回元组"}},[a._v("#")]),a._v(" 使用 shape 属性，返回元组：")]),a._v(" "),t("p",[a._v("return [players.shape[0], players.shape[1]]    #players.shape[0] 给出 DataFrame players 中的行数，players.shape[1] 给出 DataFrame players 中的列数。")]),a._v(" "),t("p",[a._v("返回的元组意思是，该DataFrame players表，一共有10行50列数据，每一行数据代表一个运动员，每一列数据描述运动员的属性。")]),a._v(" "),t("h3",{attrs:{id:"_3、代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、代码实现"}},[a._v("#")]),a._v(" 3、代码实现")]),a._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" pandas "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" pd\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getDataframeSize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("players"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" pd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DataFrame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" List"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("players"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("shape"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" players"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("shape"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("h3",{attrs:{id:"_4、执行结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、执行结果"}},[a._v("#")]),a._v(" 4、执行结果")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yishukan/yishukan/raw/master/img/image-20231025000646379.png",alt:"image-20231025000646379"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);