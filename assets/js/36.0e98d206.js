(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{344:function(a,s,t){"use strict";t.r(s);var e=t(6),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"如何用python的pandas库创建新列-计算员工奖金为工资的两倍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何用python的pandas库创建新列-计算员工奖金为工资的两倍"}},[a._v("#")]),a._v(" 如何用Python的pandas库创建新列，计算员工奖金为工资的两倍")]),a._v(" "),s("h2",{attrs:{id:"题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[a._v("#")]),a._v(" 题目")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("DataFrame employees\n+-------------+--------+\n| Column Name | Type.  |\n+-------------+--------+\n| name        | object |\n| salary      | int.   |\n+-------------+--------+\n")])])]),s("p",[a._v("一家公司计划为员工提供奖金。")]),a._v(" "),s("p",[a._v("编写一个解决方案，创建一个名为 "),s("code",[a._v("bonus")]),a._v(" 的新列，其中包含 "),s("code",[a._v("salary")]),a._v(" 值的 "),s("strong",[a._v("两倍")]),a._v("。")]),a._v(" "),s("p",[a._v("返回结果格式如下示例所示。")]),a._v(" "),s("p",[s("strong",[a._v("示例 1:")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("输入：\nDataFrame employees\n+---------+--------+\n| name    | salary |\n+---------+--------+\n| Piper   | 4548   |\n| Grace   | 28150  |\n| Georgia | 1103   |\n| Willow  | 6593   |\n| Finn    | 74576  |\n| Thomas  | 24433  |\n+---------+--------+\n输出：\n+---------+--------+--------+\n| name    | salary | bonus  |\n+---------+--------+--------+\n| Piper   | 4548   | 9096   |\n| Grace   | 28150  | 56300  |\n| Georgia | 1103   | 2206   |\n| Willow  |  593   | 13186  |\n| Finn    | 74576  | 149152 |\n| Thomas  | 24433  | 48866  |\n+---------+--------+--------+\n解释：\n通过将 salary 列中的值加倍创建了一个新的 bonus 列。\n")])])]),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[a._v("#")]),a._v(" 解决方案")]),a._v(" "),s("h3",{attrs:{id:"_1、审题-理解题意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、审题-理解题意"}},[a._v("#")]),a._v(" 1、审题，理解题意")]),a._v(" "),s("p",[a._v("题目要求我们在 DataFrame employees 中创建一个新的列 'bonus'，新列是每个员工工资的两倍。")]),a._v(" "),s("h3",{attrs:{id:"_2、解题思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、解题思路"}},[a._v("#")]),a._v(" 2、解题思路")]),a._v(" "),s("p",[a._v("先来回顾几个概念：")]),a._v(" "),s("p",[a._v("pandas DataFrame: 与 SQL 表类似，DataFrame 是以列形式显示的 Series 的集合。我们可以添加、删除和更改 DataFrame 中的值、行和列。 可以对 DataFrame Series 中的每个单独元素执行的操作。按列操作的几种类型的示例包括算术操作、聚合函数、筛选和条件操作以及字符串操作。")]),a._v(" "),s("p",[a._v("pandas Series: pandas 库提供的一维数据结构。可以将 Series 视为 pandas DataFrame 中的一列数据。一个 Series 可以包含广泛的数据类型，但它们是同质的，所有元素必须是相同的数据类型。与 DataFrame 一样，Series 被编入索引，并且可以被标记以便于数据检索。")]),a._v(" "),s("p",[a._v("那么题目的解题思路我们可以创建新列，列名为bonus ，值为salary列值的两倍，然后将新列分配给 employees DataFrame。当我们执行 employees['bonus'] = employees['salary'] * 2， 我们会在 DataFrame employees 中创建一个叫做 bonus 的新列，并且使用 salary 列值的双倍填充它。")]),a._v(" "),s("h3",{attrs:{id:"_3、代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、代码实现"}},[a._v("#")]),a._v(" 3、代码实现")]),a._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" pandas "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" pd\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBonusColumn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" pd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DataFrame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" pd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DataFrame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'bonus'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'salary'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" employees\n")])])]),s("h3",{attrs:{id:"_4、执行结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、执行结果"}},[a._v("#")]),a._v(" 4、执行结果")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/yishukan/yishukan/raw/master/img/image-20231025075716647.png",alt:"image-20231025075716647"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);